language: python

branches:
    only:
        - master

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

python:
    - 2.7
    - 3.5
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=1.9
        - ASTROPY_VERSION=stable
        - CONDA_INSTALL='conda install -c astropy-ci-extras --yes'
        - PIP_INSTALL='pip install'
        - NUMBA=false
    matrix:
        - SETUP_CMD='egg_info'

matrix:

    include:

        # Do a coverage test in Python 2 w/ numpy 1.8 for sherpa.
        - python: 2.7
          env: NUMPY_VERSION=1.8 SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - python: 2.7
          env: SETUP_CMD='build_sphinx -w'

        # Run examples, do it first as well as it may take some time
        - python: 3.5
          env: SETUP_CMD='examples'

        # Try Astropy development version
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
        - python: 3.5
          env: ASTROPY_VERSION=development SETUP_CMD='test'

        # Try a run with numba installed
        - python: 3.4
          env: NUMBA=true SETUP_CMD='test'

        # Try all python versions with the latest numpy
        - python: 2.7
          env: SETUP_CMD='test'
        - python: 3.3
          env: SETUP_CMD='test'
        - python: 3.4
          env: SETUP_CMD='test'
        - python: 3.5
          env: NUMPY_VERSION=1.10 SETUP_CMD='test'

        # Try older numpy versions
        # 1.8 is already tested in coverage to get sherpa
        #- python: 2.7
          #env: NUMPY_VERSION=1.9 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.7 SETUP_CMD='test'

before_install:

    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda

install:

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$TRAVIS_PYTHON_VERSION
    - source activate test

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION pytest pip Cython jinja2 pyyaml scipy matplotlib h5py; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL pytest-xdist emcee triangle_plot; fi

    # ASTROPY
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == development ]]; then $PIP_INSTALL git+http://github.com/astropy/astropy.git#egg=astropy; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == stable ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION astropy; fi

    # Add sherpa conda repository for Python 2.7, numpy 1.8
    - if [[ $SETUP_CMD != egg_info ]] && [[ $TRAVIS_PYTHON_VERSION == 2.7 ]] && [[ $NUMPY_VERSION == 1.8 ]]; then conda config --add channels sherpa ; $CONDA_INSTALL sherpa; fi

    # Add numba
    - if [[ $NUMBA == true ]]; then $CONDA_INSTALL numba; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION Sphinx matplotlib mock sphinx_rtd_theme; fi

    # COVERAGE DEPENDENCIES
    # TODO can use latest version of coverage (4.0) once
    # https://github.com/astropy/astropy/issues/4175 is addressed in
    # astropy release version.
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_INSTALL coverage==3.7.1 coveralls; fi

script:
   - |
     if [[ $SETUP_CMD == 'examples' ]]; then 
         python setup.py install
         cd examples
         echo 'backend : Agg' > matplotlibrc
         for script in RXJ1713*.py; do
             echo ''
             echo "Running example $script..."
             time python $script
         done
     else
         python setup.py $SETUP_CMD
     fi

after_success:
    # Uncomment line below if coveralls.io is set up for this package.
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='naima/tests/coveragerc'; fi
